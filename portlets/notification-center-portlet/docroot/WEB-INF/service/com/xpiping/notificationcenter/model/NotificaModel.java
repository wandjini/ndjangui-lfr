/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.xpiping.notificationcenter.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.AuditedModel;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Notifica service. Represents a row in the &quot;xpiping_notificationcenter_Notifica&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ndjangui.notificationcenter.model.impl.NotificaModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ndjangui.notificationcenter.model.impl.NotificaImpl}.
 * </p>
 *
 * @author marcoleo
 * @see Notifica
 * @see com.ndjangui.notificationcenter.model.impl.NotificaImpl
 * @see com.ndjangui.notificationcenter.model.impl.NotificaModelImpl
 * @generated
 */
public interface NotificaModel extends AuditedModel, BaseModel<Notifica> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a notifica model instance should use the {@link Notifica} interface instead.
	 */

	/**
	 * Returns the primary key of this notifica.
	 *
	 * @return the primary key of this notifica
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this notifica.
	 *
	 * @param primaryKey the primary key of this notifica
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the notifica ID of this notifica.
	 *
	 * @return the notifica ID of this notifica
	 */
	public long getNotificaId();

	/**
	 * Sets the notifica ID of this notifica.
	 *
	 * @param notificaId the notifica ID of this notifica
	 */
	public void setNotificaId(long notificaId);

	/**
	 * Returns the company ID of this notifica.
	 *
	 * @return the company ID of this notifica
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this notifica.
	 *
	 * @param companyId the company ID of this notifica
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this notifica.
	 *
	 * @return the user ID of this notifica
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this notifica.
	 *
	 * @param userId the user ID of this notifica
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this notifica.
	 *
	 * @return the user uuid of this notifica
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this notifica.
	 *
	 * @param userUuid the user uuid of this notifica
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this notifica.
	 *
	 * @return the user name of this notifica
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this notifica.
	 *
	 * @param userName the user name of this notifica
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this notifica.
	 *
	 * @return the create date of this notifica
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this notifica.
	 *
	 * @param createDate the create date of this notifica
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this notifica.
	 *
	 * @return the modified date of this notifica
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this notifica.
	 *
	 * @param modifiedDate the modified date of this notifica
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the notifica type ID of this notifica.
	 *
	 * @return the notifica type ID of this notifica
	 */
	public long getNotificaTypeId();

	/**
	 * Sets the notifica type ID of this notifica.
	 *
	 * @param notificaTypeId the notifica type ID of this notifica
	 */
	public void setNotificaTypeId(long notificaTypeId);

	/**
	 * Returns the name of this notifica.
	 *
	 * @return the name of this notifica
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this notifica.
	 *
	 * @param name the name of this notifica
	 */
	public void setName(String name);

	/**
	 * Returns the text of this notifica.
	 *
	 * @return the text of this notifica
	 */
	@AutoEscape
	public String getText();

	/**
	 * Sets the text of this notifica.
	 *
	 * @param text the text of this notifica
	 */
	public void setText(String text);

	/**
	 * Returns the subject of this notifica.
	 *
	 * @return the subject of this notifica
	 */
	@AutoEscape
	public String getSubject();

	/**
	 * Sets the subject of this notifica.
	 *
	 * @param subject the subject of this notifica
	 */
	public void setSubject(String subject);

	/**
	 * Returns the description of this notifica.
	 *
	 * @return the description of this notifica
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this notifica.
	 *
	 * @param description the description of this notifica
	 */
	public void setDescription(String description);

	/**
	 * Returns the aviable of this notifica.
	 *
	 * @return the aviable of this notifica
	 */
	public Boolean getAviable();

	/**
	 * Sets the aviable of this notifica.
	 *
	 * @param aviable the aviable of this notifica
	 */
	public void setAviable(Boolean aviable);

	/**
	 * Returns the ignore intersaction of this notifica.
	 *
	 * @return the ignore intersaction of this notifica
	 */
	public Boolean getIgnoreIntersaction();

	/**
	 * Sets the ignore intersaction of this notifica.
	 *
	 * @param ignoreIntersaction the ignore intersaction of this notifica
	 */
	public void setIgnoreIntersaction(Boolean ignoreIntersaction);

	/**
	 * Returns the orgs IDs of this notifica.
	 *
	 * @return the orgs IDs of this notifica
	 */
	@AutoEscape
	public String getOrgsIds();

	/**
	 * Sets the orgs IDs of this notifica.
	 *
	 * @param orgsIds the orgs IDs of this notifica
	 */
	public void setOrgsIds(String orgsIds);

	/**
	 * Returns the groups IDs of this notifica.
	 *
	 * @return the groups IDs of this notifica
	 */
	@AutoEscape
	public String getGroupsIds();

	/**
	 * Sets the groups IDs of this notifica.
	 *
	 * @param groupsIds the groups IDs of this notifica
	 */
	public void setGroupsIds(String groupsIds);

	/**
	 * Returns the roles IDs of this notifica.
	 *
	 * @return the roles IDs of this notifica
	 */
	@AutoEscape
	public String getRolesIds();

	/**
	 * Sets the roles IDs of this notifica.
	 *
	 * @param rolesIds the roles IDs of this notifica
	 */
	public void setRolesIds(String rolesIds);

	/**
	 * Returns the last check date of this notifica.
	 *
	 * @return the last check date of this notifica
	 */
	public Date getLastCheckDate();

	/**
	 * Sets the last check date of this notifica.
	 *
	 * @param lastCheckDate the last check date of this notifica
	 */
	public void setLastCheckDate(Date lastCheckDate);

	/**
	 * Returns the deleted of this notifica.
	 *
	 * @return the deleted of this notifica
	 */
	public Boolean getDeleted();

	/**
	 * Sets the deleted of this notifica.
	 *
	 * @param deleted the deleted of this notifica
	 */
	public void setDeleted(Boolean deleted);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Notifica notifica);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Notifica> toCacheModel();

	@Override
	public Notifica toEscapedModel();

	@Override
	public Notifica toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}