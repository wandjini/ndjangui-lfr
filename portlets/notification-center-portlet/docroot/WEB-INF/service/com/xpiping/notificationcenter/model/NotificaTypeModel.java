/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.xpiping.notificationcenter.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the NotificaType service. Represents a row in the &quot;xpiping_notificationcenter_NotificaType&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.ndjangui.notificationcenter.model.impl.NotificaTypeModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.ndjangui.notificationcenter.model.impl.NotificaTypeImpl}.
 * </p>
 *
 * @author marcoleo
 * @see NotificaType
 * @see com.ndjangui.notificationcenter.model.impl.NotificaTypeImpl
 * @see com.ndjangui.notificationcenter.model.impl.NotificaTypeModelImpl
 * @generated
 */
public interface NotificaTypeModel extends BaseModel<NotificaType> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a notifica type model instance should use the {@link NotificaType} interface instead.
	 */

	/**
	 * Returns the primary key of this notifica type.
	 *
	 * @return the primary key of this notifica type
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this notifica type.
	 *
	 * @param primaryKey the primary key of this notifica type
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the notifica type ID of this notifica type.
	 *
	 * @return the notifica type ID of this notifica type
	 */
	public long getNotificaTypeId();

	/**
	 * Sets the notifica type ID of this notifica type.
	 *
	 * @param notificaTypeId the notifica type ID of this notifica type
	 */
	public void setNotificaTypeId(long notificaTypeId);

	/**
	 * Returns the company ID of this notifica type.
	 *
	 * @return the company ID of this notifica type
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this notifica type.
	 *
	 * @param companyId the company ID of this notifica type
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this notifica type.
	 *
	 * @return the create date of this notifica type
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this notifica type.
	 *
	 * @param createDate the create date of this notifica type
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this notifica type.
	 *
	 * @return the modified date of this notifica type
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this notifica type.
	 *
	 * @param modifiedDate the modified date of this notifica type
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the name of this notifica type.
	 *
	 * @return the name of this notifica type
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this notifica type.
	 *
	 * @param name the name of this notifica type
	 */
	public void setName(String name);

	/**
	 * Returns the message destination of this notifica type.
	 *
	 * @return the message destination of this notifica type
	 */
	@AutoEscape
	public String getMessageDestination();

	/**
	 * Sets the message destination of this notifica type.
	 *
	 * @param messageDestination the message destination of this notifica type
	 */
	public void setMessageDestination(String messageDestination);

	/**
	 * Returns the description of this notifica type.
	 *
	 * @return the description of this notifica type
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this notifica type.
	 *
	 * @param description the description of this notifica type
	 */
	public void setDescription(String description);

	/**
	 * Returns the place holders of this notifica type.
	 *
	 * @return the place holders of this notifica type
	 */
	@AutoEscape
	public String getPlaceHolders();

	/**
	 * Sets the place holders of this notifica type.
	 *
	 * @param placeHolders the place holders of this notifica type
	 */
	public void setPlaceHolders(String placeHolders);

	/**
	 * Returns the aviable of this notifica type.
	 *
	 * @return the aviable of this notifica type
	 */
	public Boolean getAviable();

	/**
	 * Sets the aviable of this notifica type.
	 *
	 * @param aviable the aviable of this notifica type
	 */
	public void setAviable(Boolean aviable);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(NotificaType notificaType);

	@Override
	public int hashCode();

	@Override
	public CacheModel<NotificaType> toCacheModel();

	@Override
	public NotificaType toEscapedModel();

	@Override
	public NotificaType toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}